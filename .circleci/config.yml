version: 2.1

jobs:
  checkoutEtTests:
    docker:
      - image: cimg/node:15.8.0
    steps:
      - run:
          name: Cloner le répertoire backend et installer les dépendances
          command: |
            git clone -b backend https://github.com/gwefoss/labo2CircleCI.git ~/3w5-h24-tp2-backend
            cd ~/3w5-h24-tp2-backend
            npm install -y

      - run:
          name: Vérifier le répertoire courant et le contenu de package.json
          command: |
            echo "Répertoire courant : $(pwd)"
            echo "Liste des fichiers :"
            ls -al
            echo "Contenu de package.json :"
            cat package.json

      - run:
          name: Exécuter les tests du backend
          command: |
            cd ~/3w5-h24-tp2-backend
            npm test
      - persist_to_workspace:
          root: ~/3w5-h24-tp2-backend
          paths:
            - .

  integrationFrontend:
    docker:
      - image: cimg/node:15.8.0
    steps:
      - run:
          name: Cloner le répertoire frontend et installer les dépendances
          command: |
            git clone -b frontend https://github.com/gwefoss/labo2CircleCI.git ~/3w5-h24-tp2-frontend
            cd ~/3w5-h24-tp2-frontend
            npm install
      - run:
          name: Construire le frontend
          command: |
            cd ~/3w5-h24-tp2-frontend
            npm run build
      - run:
          name: Préparer le répertoire public du backend
          command: |
            mkdir -p ~/3w5-h24-tp2-backend/public
            cp -R ~/3w5-h24-tp2-frontend/build/* ~/3w5-h24-tp2-backend/public/
      - persist_to_workspace:
          root: ~/3w5-h24-tp2-backend
          paths:
            - .

  deploiement:
    docker:
      - image: cimg/node:15.8.0
    steps:
      - attach_workspace:
          at: ~/3w5-h24-tp2-backend
      - run:
          name: Lister le contenu du répertoire backend
          command: |
            cd ~/3w5-h24-tp2-backend
            ls -Rl

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - checkoutEtTests
      - integrationFrontend:
          requires:
            - checkoutEtTests
      - deploiement:
          requires:
            - integrationFrontend

